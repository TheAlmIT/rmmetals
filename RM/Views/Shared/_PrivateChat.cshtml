
@using RM.Models
@model ChatRequestUser

<link href="~/css/ChatStyle.css" rel="stylesheet" />
<link href="~/css/JQueryUI/themes/base/jquery.ui.all.css" rel="stylesheet" />


<!--Script references. -->
<!--Reference the jQuery library. -->
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
@*<script src="/Scripts/jquery-1.8.2.min.js"></script>*@

<script src="~/Scripts/ui/jquery.ui.core.js"></script>
<script src="~/Scripts/ui/jquery.ui.widget.js"></script>
<script src="~/Scripts/ui/jquery.ui.mouse.js"></script>
<script src="~/Scripts/ui/jquery.ui.draggable.js"></script>
<script src="~/Scripts/ui/jquery.ui.resizable.js"></script>



<!--Reference the SignalR library. -->
<script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
@*<script src="/Scripts/jquery.signalR-1.0.0.js"></script>*@

<!--Reference the autogenerated SignalR hub script. -->
@*<script src="/signalr/hubs"></script>*@
<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    var isUserLogin = false;
        $(function () {



            // Declare a proxy to reference the hub.
            var chatHub = $.connection.chatHub;

            registerClientMethods(chatHub);

            // Start Hub
            $.connection.hub.start().done(function () {
                setScreen(false, chatHub);
                registerEvents(chatHub)

            });

        });

        function setScreen(isLogin, chatHub) {

            if (('@User.IsInRole("Admin")' == 'True' || '@User.Identity.IsAuthenticated'=='True') && !isLogin) {
                isUserLogin = true;
                $("#divChat").show();
                $("#divLogin").hide();
                var name = '@User.Identity.Name';
                if (chatHub != undefined) {
                    if ('@User.IsInRole("Admin")' == 'True') {
                        name = 'Admin';
                    }
                     chatHub.server.connect(name, '', '','','@User.IsInRole("Admin")');
                }
                @*chatHub.server.connect('@Session["UserName"]', '', '','@Session["IsAdmin"]');*@

            }
            else {
            if (!isLogin) {
                isUserLogin = false;
                $("#divChat").hide();
                $("#divLogin").hide();
            }
            else {
                isUserLogin = true;
                $("#divChat").show();
                $("#divLogin").hide();
            }
            }
        }

        function registerEvents(chatHub) {

            $("#btnStartChat").click(function () {

                var name = $("#txtNickName").val();
                var email = $("#txtEmail").val();
                var contact = $("#txtContactNumber").val();
                var notes = $("#txtNotes").val();

                //if (name.length > 0 && email.length > 0 && contact.length > 0) {
                if (name.length > 0) {
                    chatHub.server.connect(name, email, contact,notes,'');
                }
                else {
                    alert("Please enter details.");
                }

            });
            $("#btnShowChatWindow").click(function () {


                if ('@User.IsInRole("Admin")' == 'True') {
                    $("#divusers").toggle();
                    isUserLogin = true;
                }
                else {
                    if (!isUserLogin) {
                        $("#divLogin").toggle();
                    }
                    else {

                        $("#divChat").toggle();
                    }
                }

            });
            $("#btnImgWithoutLoginDelete").click(function () {
                $("#divChat").hide();
                $("#divLogin").hide();
            });

            $('#btnSendMsg').click(function () {

                var msg = $("#txtMessage").val();
                if (msg.length > 0) {

                    var userName = $('#hdUserName').val();
                    chatHub.server.sendMessageToAll(userName, msg);
                    $("#txtMessage").val('');
                }
            });


            $("#txtNickName").keypress(function (e) {
                if (e.which == 13) {
                    $("#btnStartChat").click();
                }
            });

            $("#txtMessage").keypress(function (e) {
                if (e.which == 13) {
                    $('#btnSendMsg').click();
                }
            });


        }

        function registerClientMethods(chatHub) {

            // Calls when user successfully logged in
            chatHub.client.onConnected = function (id, userName, allUsers, messages, isAdmin) {
                isUserLogin = true;
                setScreen(true, chatHub);

                $('#hdId').val(id);
                $('#hdUserName').val(userName);
                $('#spanUser').html(userName);

                // Add All Users
                //var isAdminUser = allUsers.find(q => q.IsAdmin === true && q.IsFreeFlag === true);
                var isAdminUser = allUsers.find(q => q.IsAdmin === true);
                if ('@User.IsInRole("Admin")' == 'True') {
                for (i = 0; i < allUsers.length; i++) {

                    AddUser(chatHub, allUsers[i].ConnectionId, allUsers[i].UserName);
                }
                }
                if (isAdmin !== 'True') {
                    if (isAdminUser) {
                        OpenPrivateChatWindow(chatHub, isAdminUser.ConnectionId, isAdminUser.UserName);
                        // Add Existing Messages
                        for (i = 0; i < messages.length; i++) {

                            AddMessage(messages[i].UserName, messages[i].Message);
                        }
                    }
                    else {
                       // alert("No admin users available, we will get back to you soon.");
            $('#errorMessage').html("No admin users available, we will get back to you soon.")
                    }
                }
                else {
                    //alert("No users avaliable.");
                    $('#errorMessage').html("Welcome Admin.")
                }
            }

            // On New User Connected
            chatHub.client.onNewUserConnected = function (id, name) {

                AddUser(chatHub, id, name);
            }


            // On User Disconnected
            chatHub.client.onUserDisconnected = function (id, userName) {

                $('#' + id).remove();

                var ctrId = 'private_' + id;
                $('#' + ctrId).remove();


                var disc = $('<div class="disconnect">"' + userName + '" logged off.</div>');

                $(disc).hide();
                $('#divusers').prepend(disc);
                $(disc).fadeIn(200).delay(2000).fadeOut(200);

            }

            chatHub.client.messageReceived = function (userName, message) {

                AddMessage(userName, message);
            }


            chatHub.client.sendPrivateMessage = function (windowId, fromUserName, message) {

                var ctrId = 'private_' + windowId;


                if ($('#' + ctrId).length == 0) {

                    createPrivateChatWindow(chatHub, windowId, ctrId, fromUserName);

                }

                $('#' + ctrId).find('#divMessage').append('<div class="message"><span class="userName">' + fromUserName + '</span>: ' + message + '</div>');

                // set scrollbar
                var height = $('#' + ctrId).find('#divMessage')[0].scrollHeight;
                $('#' + ctrId).find('#divMessage').scrollTop(height);

            }

        }

        function AddUser(chatHub, id, name) {

            var userId = $('#hdId').val();

            var code = "";

            if (userId == id) {

                code = $('<div class="loginUser">' + name + "</div>");

            }
            else {

                code = $('<a id="' + id + '" class="user" >' + name + '<a>');

                $(code).dblclick(function () {

                    var id = $(this).attr('id');

                    if (userId != id)
                        OpenPrivateChatWindow(chatHub, id, name);

                });
            }

            $("#divusers").append(code);

        }

        function AddMessage(userName, message) {
            $('#divChatWindow').append('<div class="message"><span class="userName">' + userName + '</span>: ' + message + '</div>');

            var height = $('#divChatWindow')[0].scrollHeight;
            $('#divChatWindow').scrollTop(height);
        }

        function OpenPrivateChatWindow(chatHub, id, userName) {

            var ctrId = 'private_' + id;

            if ($('#' + ctrId).length > 0) return;

            createPrivateChatWindow(chatHub, id, ctrId, userName);

        }

        function createPrivateChatWindow(chatHub, userId, ctrId, userName) {

            var div = '<div id="' + ctrId + '" class="ui-widget-content draggable private-chat-window" rel="0">' +
                '<div class="header">' +
                '<div  style="float:right;">' +
                '<img id="imgDelete"  style="cursor:pointer;" src="/images/delete.png"/>' +
                '</div>' +

                '<span class="selText" rel="0">' + userName + '</span>' +
                '</div>' +
                '<div id="divMessage" class="messageArea">' +

                '</div>' +
                '<div class="buttonBar">' +
                '<input id="txtPrivateMessage" class="msgText" type="text"   />' +
                '<input id="btnSendMessage" class="submitButton button" type="button" value="Send"   />' +
                '</div>' +
                '</div>';

            var $div = $(div);

            // DELETE BUTTON IMAGE
            $div.find('#imgDelete').click(function () {
                $('#' + ctrId).remove();
         chatHub.server.disconnectChat(userId);
            });

            // Send Button event
            $div.find("#btnSendMessage").click(function () {

                $textBox = $div.find("#txtPrivateMessage");
                var msg = $textBox.val();
                if (msg.length > 0) {

                    chatHub.server.sendPrivateMessage(userId, msg);
                    $textBox.val('');
                }
            });

            // Text Box event
            $div.find("#txtPrivateMessage").keypress(function (e) {
                if (e.which == 13) {
                    $div.find("#btnSendMessage").click();
                }
            });

            AddDivToContainer($div);

        }

        function AddDivToContainer($div) {
            $('#divContainer').prepend($div);

            $div.draggable({

                handle: ".header",
                stop: function () {

                }
            });

            ////$div.resizable({
            ////    stop: function () {

            ////    }
            ////});

        }

</script>

<section id="service" class="wow fadeInUp">
    <div id="header" style="display:none">

    </div>
    <div class="container" id="divContainer" style="float: right;overflow: hidden;">
        <div id="chatimage">
            <a href="#" id="btnShowChatWindow">
                <img src="~/images/chat-blue.png" alt="Chat" style="width:42px;height:42px;">
            </a>
        </div>
        <div id="divLogin">
            <div id="without-loginwindow" class="ui-widget-content draggable private-chat-window" rel="0">
                <div class="header">
                    <div style="float:right;">
                        <img id="btnImgWithoutLoginDelete" style="cursor:pointer;" src="/images/delete.png" />
                    </div>

                    <span class="selText" rel="0">Please fill Below details</span>
                </div>
                <div id="divUserInfo" class="messageArea">
                    <div style="padding-top:30px" class="panel-body">

                        <div style="display:none" id="login-alert" class="alert alert-danger col-sm-12"></div>

                        <form id="loginform" class="form-horizontal" role="form">

                            <div style="margin-bottom: 25px" class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>

                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name", @id = "txtNickName" })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })

                            </div>


                            <div style="margin-bottom: 25px" class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>

                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email", @id = "txtEmail" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                            <div style="margin-bottom: 25px" class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>

                                @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", @placeholder = "Contact Number", @id = "txtContactNumber" })
                                @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "text-danger" })
                            </div>
                            <div style="margin-bottom: 25px" class="input-group">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-edit"></i></span>

                                @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", @placeholder = "Message", @id = "txtNotes" })
                                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                            </div>
                        </form>


                    </div>
                </div>
                <div class="buttonBar">
                    <input id="btnStartChat" type="button" class="submitButton" value="Start Chat" />
                </div>
            </div>
         
        </div>
        <div id="divChat" class="chatRoom">
            <div class="content">
                <div id="divusers" class="users" style="display:none">
                </div>
                </div>
                @*<div class="title" style="display:none">
                Welcome to Chat Room [<span id='spanUser'></span>]

            </div>
            <div class="content">
                <div id="divChatWindow" class="chatWindow" style="display:none">
                </div>
                <div id="divusers" class="users" style="display:none">
                </div>
                <span id="errorMessage"></span>
            </div>
            <div class="messageBar" style="display:none;">
                <input class="textbox" type="text" id="txtMessage" />
                <input id="btnSendMsg" type="button" value="Send" class="submitButton" />
            </div>*@
            </div>
            <input id="hdId" type="hidden" />
            <input id="hdUserName" type="hidden" />
        </div>
</section>


